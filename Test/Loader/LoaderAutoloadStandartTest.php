<?php

namespace Ruon\Loader;

/**
 * Test class for LoaderAutoloadStandart.
 * Generated by PHPUnit on 2012-04-24 at 10:47:39.
 */
class LoaderAutoloadStandartTest extends \PHPUnit_Framework_TestCase
{

	/**
	 * @var LoaderAutoloadStandart
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp()
	{
		$this->object = new LoaderAutoloadStandart();
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown()
	{

	}

	/**
	 * @covers Ruon\Loader\LoaderAutoloadStandart::getLoader
	 * @covers Ruon\Loader\LoaderAutoloadStandart::setLoader
	 */
	public function testGetLoader()
	{
		$tester = new \Ruon\Lib\Test\Setter;
        $tester->test($this, $this->object, 'Loader');
	}

	public function providerRegister()
	{
		return array(
			'mock' => array($this->getMock('Loader\\Loader', array('load')))
		);
	}

	/**
	 * @covers Ruon\Loader\LoaderAutoloadStandart::register
	 * @covers Ruon\Loader\LoaderAutoloadStandart::unregister
	 * @dataProvider providerRegister
	 */
	public function testRegister($mock)
	{
		$this->object->setLoader($mock);
		$this->object->register();
		$loader = $this->object->getLoader();
		$this->assertNotNull($loader);
		$afterRegister = spl_autoload_functions();
        $this->assertContains(array($loader, 'load'), $afterRegister);

		$this->object->unregister();
		$afterUnregister = spl_autoload_functions();
        $this->assertNotContains(array($loader, 'load'), $afterUnregister);
	}
}
