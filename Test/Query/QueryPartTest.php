<?php

namespace Ruon\Query;

/**
 * Test class for QueryPart.
 * Generated by PHPUnit on 2012-05-16 at 21:08:25.
 */
class QueryPartTest extends \PHPUnit_Framework_TestCase
{

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp()
	{

	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown()
	{

	}

	/**
	 * @covers Ruon\Query\QueryPart::__construct
	 * @covers Ruon\Query\QueryPart::getData
	 */
	public function testGetData()
	{
		$object = $this->getMockForAbstractClass(
			__NAMESPACE__ . '\\QueryPart',
			array(1, '2', $this),
			'',
			true,
			true,
			true
		);

		$data = $object->getData();

		$this->assertEquals(array(1, '2', $this), $data);
	}

	/**
	 * @covers Ruon\Query\QueryPart::__construct
	 * @covers Ruon\Query\QueryPart::getDataAt
	 */
	public function testGetDataAt()
	{
		$object = $this->getMockForAbstractClass(
			__NAMESPACE__ . '\\QueryPart',
			array(1, '2', $this),
			'',
			true,
			true,
			true
		);

		$this->assertEquals(1, $object->getDataAt(0));
		$this->assertEquals('2', $object->getDataAt(1));
		$this->assertEquals($this, $object->getDataAt(2));
	}

	/**
	 * @covers Ruon\Query\QueryPart::__construct
	 * @covers Ruon\Query\QueryPart::getType
	 */
	public function testGetType()
	{
		$object = $this->getMockForAbstractClass(
			__NAMESPACE__ . '\\QueryPart',
			array(1, '2', $this),
			'Ruon_Query_QueryWithType',
			true,
			true,
			true
		);

		$this->assertEquals('WithType', $object->getType());
	}

}
