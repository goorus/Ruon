<?php

namespace Ruon\Lib\Test;

require_once __DIR__ . '/../../../Lib/Test/Setter.php';

/**
 * Test class for Setter.
 *
 * Для этого теста следовало бы использовать Mock объект с методами "get"
 * и "set", но из-за особенностей реализации PHPUnit это не возможно,
 * в виртуальные методы mock объекта приходят данные отличные от передаваемых.
 * В частности приходят клоны объектов и null вместо массива.
 *
 * Generated by PHPUnit on 2012-04-29 at 09:20:04.
 */
class SetterTest extends \PHPUnit_Framework_TestCase
{

	/**
	 * Объект с геттером и сеттером
	 *
	 * @var object
	 */
	protected $mock;

	/**
	 * Последнее установленно через сеттер Mock объекта значение
	 *
	 * @var mixed
	 */
	protected $mockValue;

	/**
	 * @var Setter
	 */
	protected $object;

	/**
	 *
	 * @param mixed $value
	 * @return \PHPUnit_Framework_MockObject_MockObject
	 */
	public function setMockProperty($value)
	{
		$this->mockValue = $value;
		return $this->mock;
	}

	/**
	 * Возвращает установленное в Mock значение
	 *
	 * @return mixed
	 */
	public function getMockProperty()
	{
		return $this->mockValue;
	}

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp()
	{
		$this->mock = $this;
		$this->object = new Setter;
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown()
	{

	}

	/**
	 * Тест для сеттера с настройками по умолчанию
	 *
	 * @covers \Ruon\Lib\Test\Setter::test
	 */
	public function testTestDefault()
	{
		$this->object->test($this, $this->mock, 'MockProperty');
	}

	/**
	 * Тест с пользовательским набором тестов
	 *
	 * @covers \Ruon\Lib\Test\Setter::test
	 * @todo Implement testTest().
	 */
	public function testTestUsers()
	{
		$tests = array($this, array(), false);

		$this->object->test(
			$this, 
            $this->mock,
			'MockProperty',
			$tests, false
		);
	}

}
