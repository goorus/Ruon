<?php

namespace Ruon\Lib\Test;

require_once __DIR__ . '/../../../Lib/Test/Injector.php';

/**
 * Test class for Injector.
 * Generated by PHPUnit on 2012-05-13 at 10:47:33.
 */
class InjectorTest extends \PHPUnit_Framework_TestCase
{

	/**
	 *
	 * @var mixed
	 */
	private $_testPrivate;

	/**
	 * @var Injector
	 */
	protected $object;

	/**
	 *
	 * @var mixed
	 */
	protected $testProtected;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp()
	{
		$this->object = new Injector;
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown()
	{

	}

	/**
	 * @covers \Ruon\Lib\Test\Injector::get
	 */
	public function testGet()
	{
		// protected
		$this->testProtected = 1;
		$this->assertSame(1, $this->object->get($this, 'testProtected'));

		$this->testProtected = '2';
		$this->assertSame('2', $this->object->get($this, 'testProtected'));

		$this->testProtected = $this;
		$this->assertSame($this, $this->object->get($this, 'testProtected'));

		// private
		$this->_testPrivate = 1;
		$this->assertSame(1, $this->object->get($this, '_testPrivate'));

		$this->_testPrivate = '2';
		$this->assertSame('2', $this->object->get($this, '_testPrivate'));

		$this->_testPrivate = $this;
		$this->assertSame($this, $this->object->get($this, '_testPrivate'));
	}

	/**
	 * @covers \Ruon\Lib\Test\Injector::set
	 */
	public function testSet()
	{
		// protected
		$this->object->set($this, 'testProtected', 1);
		$this->assertSame(1, $this->testProtected);

		$this->object->set($this, 'testProtected', '2');
		$this->assertSame('2', $this->testProtected);

		$this->object->set($this, 'testProtected', $this);
		$this->assertSame($this, $this->testProtected);

		// private
		$this->object->set($this, '_testPrivate', 1);
		$this->assertSame(1, $this->_testPrivate);

		$this->object->set($this, '_testPrivate', '2');
		$this->assertSame('2', $this->_testPrivate);

		$this->object->set($this, '_testPrivate', $this);
		$this->assertSame($this, $this->_testPrivate);
	}

}
