<?php

namespace Ruon\Core\Collection;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-09-20 at 22:13:46.
 */
class CollectionArrayTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var CollectionArray
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new CollectionArray;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {

    }

    /**
     * @covers Ruon\Core\Collection\CollectionArray::clear
     */
    public function testClear()
    {
        $this->object->setItems(array(1, 2, 3));
        $this->object->clear();
        $this->assertEmpty($this->object->getItems());
    }

    /**
     * @covers Ruon\Core\Collection\CollectionArray::each
     * @todo   Implement testEach().
     */
    public function testEach()
    {
        $tests = array(1, 'second', true);
        $results = array();

        $this->object->setItems($tests);
        $this->object->each(function ($item) use (&$results) {
            $results[] = $item;
        });

        $this->assertSame($tests, $results);
    }

    /**
     * @covers Ruon\Core\Collection\CollectionArray::first
     */
    public function testFirst()
    {
        $first = 'first';

        $this->object->setItems(array($first));
        $this->assertSame($first, $this->object->first());
    }

    /**
     * @covers Ruon\Core\Collection\CollectionArray::getItems
     * @covers Ruon\Core\Collection\CollectionArray::setItems
     */
    public function testGetItems()
    {
        $tester = new \Ruon\Lib\Test\Setter;
        $tester->test(
            $this,
            $this->object,
            'Items',
            array(
                array(),
                array(1, 2, 3),
                array('asdf', 'a', true)
            )
        );
    }

    /**
     * @covers Ruon\Core\Collection\CollectionArray::isEmpty
     */
    public function testIsEmpty()
    {
        $this->object->setItems(array(1));
        $this->assertFalse($this->object->isEmpty());

        $this->object->setItems(array());
        $this->assertTrue($this->object->isEmpty());
    }

}
