<?php

namespace Ruon\Core\Annotation;

require_once dirname (__FILE__) . '/../../../Core/Annotation/AnnotationSet.php';

/**
 * Test class for AnnotationSet.
 * Generated by PHPUnit on 2012-09-18 at 17:44:49.
 */
class AnnotationSetTest extends \PHPUnit_Framework_TestCase
{
	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp ()
	{

	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown ()
	{

	}

	/**
	 * @covers Ruon\Core\Annotation\AnnotationSet::__construct
	 * @covers Ruon\Core\Annotation\AnnotationSet::__get
	 * @covers Ruon\Core\Annotation\AnnotationSet::__set
	 */
	public function testGetSet ()
	{
		$data = array('key' => 'value');
		$mock = $this->getMock(
			'AnnotationRow', array('__construct', 'get', 'set'), array($data)
		);
		$set = new AnnotationSet($mock, array(), array());
		$mock
			->expects($this->once())
			->method('set')
			->with($this->equalTo('key'), $this->equalTo('value'));
		$set->key = 'value';
		$mock
			->expects($this->once())
			->method('get')
			->with($this->equalTo('key'));
		$a = $set->key;
		unset($a);
	}

	/**
	 * @covers Ruon\Core\Annotation\AnnotationSet::getMethod
	 * @covers Ruon\Core\Annotation\AnnotationSet::setMethod
	 */
	public function testGetSetMethod ()
	{
		$data = array('key' => 'value');
		$mock = $this->getMock(
			'AnnotationRow', array('__construct', 'get', 'set'), array($data)
		);
		$methods = array('key' => 'value');
		$set = new AnnotationSet($mock, $methods, array());
		$this->assertEquals('value', $set->getMethod('key'));
		$set->setMethod('key', 'otherValue');
		$this->assertEquals('otherValue', $set->getMethod('key'));
	}

	/**
	 * @covers Ruon\Core\Annotation\AnnotationSet::getProperty
	 * @covers Ruon\Core\Annotation\AnnotationSet::setProperty
	 */
	public function testGetSetProperty ()
	{
		$data = array('key' => 'value');
		$mock = $this->getMock(
			'AnnotationRow', array('__construct', 'get', 'set'), array($data)
		);
		$properties = array('key' => 'value');
		$set = new AnnotationSet($mock, array(), $properties);
		$this->assertEquals('value', $set->getProperty('key'));
		$set->setProperty('key', 'otherValue');
		$this->assertEquals('otherValue', $set->getProperty('key'));
	}
}